
/* Programa para contar as ocorrencias das
palavras de um texto */
program AnaliseDeTexto{

/* Variaveis globais */
global:
	char nomes[50, 10], palavra[10], p3[2];
	int ntab, nocorr[50];
	char c;
	logic fim;
functions:

/* Funcao para procurar uma palavra na tabela de palavras */
int Procura(){
local :
	int i, inf, sup, med, posic, compara;
	logic achou, fimteste;
statements:
	achou<-false;
	inf<-1;
	sup<-ntab;
	while(!achou & sup >= inf){
		med<-(inf+sup)/2;
		compara<-0;
		fimteste<-false;
		for(i<-0;!fimteste & compara = 0;i<-i+1){
			if(palavra[i] < nomes[med, i])			compara<-~1;
			else				if(palavra[i] > nomes[med, i])				compara<-1;
			if(palavra[i] = '\0' | nomes[med, i] = '\0')			fimteste<-true;
		}
		if(compara = 0)		achou<-true;
		else			if(compara < 0)			sup<-med-1;
			else				inf<-med+1;
	}
	if(achou)	posic<-med;
	else		posic<-~inf;
	return posic;
}

/* Fim da funcao Procura */

/* Funcao para procurar uma palavra na tabela de palavras */
}


   TABELA  DE  SIMBOLOS => Classe: (cadeia, tid, tvar, inic, ref)

Classe 2:
  (p3, IDVAR_GLOBAL, CARACTERE, 0, 0)
Classe 7:
  (c, IDVAR_GLOBAL, CARACTERE, 0, 0)
  (ntab, IDVAR_GLOBAL, INTEIRO, 0, 1)
  (palavra, IDVAR_GLOBAL, CARACTERE, 0, 0)
Classe 15:
  (nocorr, IDVAR_GLOBAL, INTEIRO, 0, 0)
Classe 17:
  (fim, IDVAR_GLOBAL, LOGICO, 0, 0)
  (nomes, IDVAR_GLOBAL, CARACTERE, 0, 0)
Classe 19:
  (Procura, IDVAR_GLOBAL)
Classe 22:
  (AnaliseDeTexto, IDPROG)


/*************************************************************/
   SIMBOLOS NAO INICIALIZADOS E NAO REFERENCIADOS:

p3, c, palavra, nocorr, fim, nomes, 
/*************************************************************/
   SIMBOLOS NAO INICIALIZADOS MAS REFERENCIADOS:

ntab, 
/*************************************************************/
   SIMBOLOS INICIALIZADOS MAS N√ÉO REFERENCIADOS:


/*************************************************************/

/* Fim do programa AnaliseDeTexto */
